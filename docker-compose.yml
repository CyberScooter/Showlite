version: "3"
services:
  postgresdb:
    container_name: postgres_db
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 123456
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - "5435:5432"
    volumes:
      # - ./postgres-data:/var/lib/postgresql/data
      # copy the sql script to create tables
      - ./sql:/docker-entrypoint-initdb.d

  movieservicedb:
    image: postgres
    container_name: movieservicedb
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=group6
      - POSTGRES_DB=movies
    ports:
      - "5436:5432"
    volumes:
      - movieservicedbdata:/var/lib/postgresql/data
    healthcheck:
       test: "exit 0"

  serviceregistry:
    build: ./services/service-registry/
    image: group6/service-registry
    container_name: serviceregistry
    ports:
      - "8761:8761"
    healthcheck:
      test: "exit 0"
  
  client:
    container_name: frontend
    build:
      context: ./client
      dockerfile: Dockerfile
    depends_on:
      - postgresdb
      - auth-server
      - watchlist-server
    ports:
      - 3000:3000
    volumes:
      - /usr/src/client/node_modules
      - ./client:/usr/src/client
  auth-server:
    container_name: auth_microservice
    build:
      context: ./services/auth
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - postgresdb
    ports:
      - 5000:5000
    environment:
      JWT_TOKEN_SECRET: ioajdfoiajfaoidjfo
      DATABASE_URL: postgres://root:123456@postgresdb:5432/showlite
    volumes:
      - /usr/src/app/node_modules
      - ./services/auth:/usr/src/app
  watchlist-server:
    container_name: watchlist_microservice
    build:
      context: ./services/watchlist
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - postgresdb
    ports:
      - 5003:5003
    environment:
      JWT_TOKEN_SECRET: ioajdfoiajfaoidjfo
      DATABASE_URL: postgres://root:123456@postgresdb:5432/showlite
    volumes:
      - /usr/src/app/node_modules
      - ./services/watchlist:/usr/src/app
  movieservice:
    build: ./services/movie-service/
    image: group6/movie-service
    container_name: movieservice
    ports:
      - "9001:9001"
    depends_on:
      movieservicedb:
        condition: service_healthy  
      serviceregistry:
        condition: service_healthy
    restart: on-failure

